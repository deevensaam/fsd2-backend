openapi: 3.0.0
info:
  version: 1.0.0
  title: Online Movie Hub API
  description: A simple API to do CRUD on users, book tickets, watch movies in online app

servers:
  - url: http://localhost:5000/

tags:
  - name: User
    description: API to manage the users.
  - name: Movies
    description: API to manage the movies.
  - name: Feedback
    description: API to manage the Feedback.

paths:
  /user:
    get:
      summary: Lists all the users
      tags: [User]
      responses:
        "200":
          description: The list of users.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
    post:
      summary: Creates an user Object .
      tags: [User]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: Created Successfully.
  /user/{userID}:
    get:
      summary: Returns an user Object by ID.
      tags: [User]
      parameters:
        - name: userID
          in: path
          required: true
          description: Autogenerated User ID by MongoDB
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
    patch:
      tags: [User]
      summary: Updated user
      description: updates the user object.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      produces:
        - "application/json"
      parameters:
        - name: userID
          in: path
          description: ID of the user object that needs to be updated
          required: true
          type: string
      responses:
        "400":
          description: Invalid user ID supplied
        "404":
          description: User not found
    delete:
      tags: [User]
      summary: Delete user
      description: deletes an user object
      produces:
        - "application/json"
      parameters:
        - name: userID
          in: path
          description: The object ID that needs to be deleted
          required: true
          type: string
      responses:
        "400":
          description: Invalid user ID supplied
        "404":
          description: User not found
  /movie:
    get:
      summary: Lists all the Movies
      tags: [Movies]
      responses:
        "200":
          description: The list of movies.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Movies"
    post:
      summary: Creates a Movie Object.
      tags: [Movies]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Movies"
      responses:
        "201":
          description: Created Successfully.
  /movie/{movieID}:
    get:
      summary: Returns a Movie Object by ID.
      tags: [Movies]
      parameters:
        - name: movieID
          in: path
          required: true
          description: Autogenerated Movie ID by MongoDB
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Movies"
    patch:
      tags: [Movies]
      summary: Updated Movie
      description: updates the movie object
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Movies"
      produces:
        - "application/json"
      parameters:
        - name: movieID
          in: path
          description: object that needs to be updated
          required: true
          type: string
      responses:
        "400":
          description: Invalid movie ID supplied
        "404":
          description: movie not found
    delete:
      tags: [Movies]
      summary: Delete movie
      description: deletes the movie object
      produces:
        - "application/json"
      parameters:
        - name: movieID
          in: path
          description: The object ID that needs to be deleted
          required: true
          type: string
      responses:
        "400":
          description: Invalid movie ID supplied
        "404":
          description: movie not found
  /feedback:
    get:
      summary: Lists all the Feedbacks
      tags: [Feedback]
      responses:
        "200":
          description: The list of feedbacks.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Feedback"
    post:
      summary: Creates an Feedback Object.
      tags: [Feedback]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Feedback"
      responses:
        "201":
          description: Created Successfully.
  /feedback/{feedbackID}:
    get:
      summary: Returns an feedback Object by ID.
      tags: [Feedback]
      parameters:
        - name: feedbackID
          in: path
          required: true
          description: Autogenerated feedback ID by MongoDB
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Feedback"
    patch:
      tags: [Feedback]
      summary: Updated Feedback
      description: updates the feedback object
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Feedback"
      produces:
        - "application/json"
      parameters:
        - name: feedbackID
          in: path
          description: object that needs to be updated
          required: true
          type: string
      responses:
        "400":
          description: Invalid feedback ID supplied
        "404":
          description: feedback not found
    delete:
      tags: [Feedback]
      summary: Delete Feedback
      description: deletes the feedback object
      produces:
        - "application/json"
      parameters:
        - name: feedbackID
          in: path
          description: The object ID that needs to be deleted
          required: true
          type: string
      responses:
        "400":
          description: Invalid feedback ID supplied
        "404":
          description: feedback not found

components:
  schemas:
    User:
      type: object
      required:
        - username
        - password
      properties:
        id:
          type: integer
          description: The auto-generated id of the student.
        username:
          type: string
          description: The name of the student.
        password:
          type: string
          description: The roll number of the student
      example:
        username: saam
        password: s20190010136
    Movies:
      type: object
      required:
        - title
        - genre
        - imdb
        - image
        - duration
        - trailer
      properties:
        id:
          type: integer
          description: The auto-generated id of the movie.
        title:
          type: string
          description: The title of the movie.
        genre:
          type: string
          description: The category of movie.
        imdb:
          type: number
          description: The rating of the movie.
        image:
          type: string
          description: The poster of the movie.
        duration:
          type: string
          description: The running time of the movie.
        trailer:
          type: string
          description: The trailer of the movie.
      example:
        title: Spider Man No Way Home
        genre: Action
        imdb: 8.9
        image: https://images.thedirect.com/media/photos/FFBVo2XaMAA8ydw.jpg
        duration: 2 hr 28 min
        trailer: https://youtu.be/ZYzbalQ6Lg8

    Feedback:
      type: object
      required:
        - name
        - telnum
        - email
        - message
      properties:
        id:
          type: integer
          description: The auto-generated id of the respective order.
        name:
          type: string
          decription: the name of user who feedbacks the movie.
        telnum:
          type: number
          description: the mobile number of user.
        email:
          type: string
          description: email of the user.
        message:
          type: string
          description: the message of feedback.
      example:
        name: saam 
        telnum: 0123456789
        email: d@gmail.com
        message: excellent movie
